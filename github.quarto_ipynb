{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Deploying a Site\"\n",
        "author: \"Pamela Schlosser\"\n",
        "format: html\n",
        "runtime: python\n",
        "---\n",
        "\n",
        "\n",
        "# Overview\n",
        "\n",
        "-   This guide explains how to:\n",
        "    -   Prepare and run a Dash app locally\n",
        "    -   Deploy it to Render.com using Gunicorn\n",
        "    -   Fix common deployment issues\n",
        "    -   Publish an HTML version of a Python file (or this guide) via GitHub Pages\n",
        "    -   Use a docs/ folder to host HTML with GitHub Pages\n",
        "\n",
        "# Live Example (Embedded Iframe)\n",
        "\n",
        "-   This shows a hosted Dash app inside the HTML output of this page.\n",
        "-   Replace the src URL with your own Render app link if different.\n",
        "\n",
        "\n",
        "```{html}\n",
        "<iframe src=\"https://ctba-oror.onrender.com/\" title=\"Live Dash App on Render\" \n",
        "style=\"width:100%;height:500px;border:2px solid #115740;border-radius:6px;\">\n",
        "</iframe>\n",
        "```\n",
        "\n",
        "\n",
        "1)  Prepare Your Dash App\n",
        "\n",
        "-   Ensure your main Python file defines: server = app.server\n",
        "\n",
        "-   The Gunicorn start command on Render must match your filename and server variable exactly\n",
        "\n",
        "\n",
        "```{text}\n",
        "from dash import Dash, html\n",
        "\n",
        "app = Dash(__name__)\n",
        "server = app.server  # Required for Gunicorn in production\n",
        "\n",
        "wm_green = \"#115740\"\n",
        "\n",
        "app.layout = html.Div([\n",
        "    html.H1(\"This is a simple Dash App!\", style={\"color\": wm_green, \"textAlign\": \"center\"})\n",
        "    html.p(\"Dash can publish both static and dynamic content.\", style={\"color\": wm_green, \"textAlign\": \"center\"})\n",
        "\n",
        "])\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    app.run(debug=True)\n",
        "```\n",
        "\n",
        "\n",
        "-   Example mapping:\n",
        "    -   File: LiveDash.py --\\> Start command: gunicorn LiveDash:server\n",
        "    -   File: electricity.py --\\> Start command: gunicorn electricity:server\n",
        "\n",
        "2)  Add Required Files\n",
        "\n",
        "-   Create a requirements.txt listing dependencies (add any others you import).\n",
        "\n",
        "\n",
        "```{text}\n",
        "dash\n",
        "gunicorn\n",
        "plotly\n",
        "```\n",
        "\n",
        "\n",
        "3)  Run Locally\n",
        "\n",
        "-   Create and activate a virtual environment\n",
        "-   Install dependencies\n",
        "-   Test both dev mode and production mode\n",
        "\n",
        "\n",
        "```{text}\n",
        "python -m venv .venv \n",
        ".venv\\Scripts\\activate    # Windows\n",
        "\n",
        "pip install -r requirements.txt\n",
        "python your_filename.py  # dev mode\n",
        "gunicorn your_filename:server  # production test\n",
        "```\n",
        "\n",
        "\n",
        "4)  Push to GitHub\n",
        "\n",
        "\n",
        "```{text}\n",
        "git init\n",
        "git add .\n",
        "git commit -m \"Initial commit\"\n",
        "git branch -M main\n",
        "git remote add origin https://github.com/USERNAME/REPO.git\n",
        "git push -u origin main\n",
        "```\n",
        "\n",
        "\n",
        "5)  Deploy on Render.com\n",
        "\n",
        "-   Create a New Web Service on Render and connect your GitHub repo\n",
        "-   In Settings, set the Build command to: pip install -r requirements.txt\n",
        "-   In Settings, set the Start command to: gunicorn your_filename:server\n",
        "-   Click Deploy and open the provided URL\n",
        "\n",
        "6)  Troubleshooting\n",
        "\n",
        "-   ModuleNotFoundError: Check filename and server variable (your_filename:server)\n",
        "-   Changes not showing: Clear build cache and redeploy\n",
        "-   Missing packages: Confirm all imports are in requirements.txt\n",
        "-   Port errors: Don’t hardcode PORT—Render sets it automatically\n",
        "\n",
        "7)  Publish HTML via docs/ on GitHub Pages\n",
        "\n",
        "-   Render this Quarto file to docs/ for GitHub Pages:\n",
        "\n",
        "\n",
        "```{text}\n",
        "quarto render dash_to_render.qmd --to html --output-dir docs \n",
        "git add docs \n",
        "git commit -m \"Publish HTML\" \n",
        "git push \n",
        "```\n",
        "\n",
        "\n",
        "GitHub Pages setup:\n",
        "\n",
        "-   Settings → Pages\n",
        "-   Source: Deploy from a branch\n",
        "-   Branch: main\n",
        "-   Folder: /docs\n",
        "-   Save\n",
        "\n",
        "# Your site will be available at:\n",
        "\n",
        "-   https://YOUR-USERNAME.github.io/YOUR-REPO/\n",
        "\n",
        "## Appendix A: Render a Python file to HTML with Quarto\n",
        "\n",
        "Quarto can render a Python script (with outputs) to HTML.\n",
        "\n",
        "\n",
        "```{bash}\n",
        "quarto render your_script.py --to html --output-dir docs\n",
        "```"
      ],
      "id": "63b37002"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}